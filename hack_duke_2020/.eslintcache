[{"C:\\Users\\kfang\\Desktop\\projects\\HackDuke2020\\hack_duke_2020\\src\\index.js":"1","C:\\Users\\kfang\\Desktop\\projects\\HackDuke2020\\hack_duke_2020\\src\\reportWebVitals.js":"2","C:\\Users\\kfang\\Desktop\\projects\\HackDuke2020\\hack_duke_2020\\src\\App.js":"3","C:\\Users\\kfang\\Desktop\\projects\\HackDuke2020\\hack_duke_2020\\src\\components\\index.js":"4","C:\\Users\\kfang\\Desktop\\projects\\HackDuke2020\\hack_duke_2020\\src\\components\\Customers\\Customers.js":"5","C:\\Users\\kfang\\Desktop\\projects\\HackDuke2020\\hack_duke_2020\\src\\components\\BusinessPage\\BusinessPage.js":"6","C:\\Users\\kfang\\Desktop\\projects\\HackDuke2020\\hack_duke_2020\\src\\components\\Businesses\\Businesses.js":"7","C:\\Users\\kfang\\Desktop\\projects\\HackDuke2020\\hack_duke_2020\\src\\Firebase\\firebase.js":"8","C:\\Users\\kfang\\Desktop\\projects\\HackDuke2020\\hack_duke_2020\\src\\components\\Customers\\GoogleMap.js":"9"},{"size":611,"mtime":1607199300284,"results":"10","hashOfConfig":"11"},{"size":375,"mtime":1607199300284,"results":"12","hashOfConfig":"11"},{"size":930,"mtime":1607220746897,"results":"13","hashOfConfig":"11"},{"size":202,"mtime":1607220010737,"results":"14","hashOfConfig":"11"},{"size":465,"mtime":1607220014109,"results":"15","hashOfConfig":"11"},{"size":1421,"mtime":1607220010734,"results":"16","hashOfConfig":"11"},{"size":735,"mtime":1607220010736,"results":"17","hashOfConfig":"11"},{"size":642,"mtime":1607220010734,"results":"18","hashOfConfig":"11"},{"size":3283,"mtime":1607220746899,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"18jsj8i",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"22"},"C:\\Users\\kfang\\Desktop\\projects\\HackDuke2020\\hack_duke_2020\\src\\index.js",[],["42","43"],"C:\\Users\\kfang\\Desktop\\projects\\HackDuke2020\\hack_duke_2020\\src\\reportWebVitals.js",[],"C:\\Users\\kfang\\Desktop\\projects\\HackDuke2020\\hack_duke_2020\\src\\App.js",[],"C:\\Users\\kfang\\Desktop\\projects\\HackDuke2020\\hack_duke_2020\\src\\components\\index.js",[],"C:\\Users\\kfang\\Desktop\\projects\\HackDuke2020\\hack_duke_2020\\src\\components\\Customers\\Customers.js",[],"C:\\Users\\kfang\\Desktop\\projects\\HackDuke2020\\hack_duke_2020\\src\\components\\BusinessPage\\BusinessPage.js",["44","45"],"import React, { useEffect, useState } from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport firebase from \"../../Firebase/firebase.js\"\r\nimport { useParams } from \"react-router-dom\"\r\nimport Row from \"react-bootstrap/Row\"\r\nimport Col from \"react-bootstrap/Col\"\r\n\r\nfunction BusinessPage() {\r\n  let db = firebase.db;\r\n  let { name } = useParams();\r\n  let businessName = name.replaceAll(\"-\", \" \");\r\n  let businessRef = db.ref(`Stores/${businessName}`);\r\n  let [businessData, setBusinessData] = useState(null);\r\n\r\n  useEffect(() => {\r\n    businessRef.on('value', snapshot => {\r\n      setBusinessData(snapshot.val());\r\n    })\r\n  }, [])\r\n  console.log(businessData);\r\n  if (businessData != null) {\r\n    return (\r\n      <Container fluid>\r\n        {Object.entries(businessData.Inventory).map(business => (\r\n          <Row md={3} lg={3} style={{height: \"30vh\"}}>\r\n            <Col className=\"my-auto\" style={{fontSize: \"2.5em\"}}><div>{business[0]}</div></Col>\r\n            <Col className=\"my-auto\" style={{fontSize: \"2.5em\"}}><div>${business[1].Price.toFixed(2)}</div></Col>\r\n            <Col className=\"my-auto\"><img src={business[1].url} style={{maxWidth: \"80vw\", maxHeight: \"25vh\", borderRadius: \"20px\"}}/></Col>\r\n          </Row>\r\n        ))\r\n        }\r\n      </Container>\r\n    );\r\n  } else {\r\n    return (\r\n      <Container>\r\n        Loading...\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nexport default BusinessPage;\r\n","C:\\Users\\kfang\\Desktop\\projects\\HackDuke2020\\hack_duke_2020\\src\\components\\Businesses\\Businesses.js",["46"],"import React, { useEffect, useState } from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport \"./Businesses.css\";\r\nimport firebase from \"../../Firebase/firebase.js\"\r\n\r\nfunction Businesses() {\r\n  let db = firebase.db;\r\n  let businessRef = db.ref('Stores');\r\n  let [businessData, setBusinessData] = useState({});\r\n  useEffect(() => {\r\n    businessRef.on('value', snapshot => {\r\n      setBusinessData(snapshot.val());\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <Container className=\"Businesses\">\r\n      <div>\r\n        <ul>\r\n          {Object.entries(businessData).map(business => (\r\n            <li>{business[0]}</li>\r\n          ))\r\n          }\r\n        </ul>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Businesses;\r\n","C:\\Users\\kfang\\Desktop\\projects\\HackDuke2020\\hack_duke_2020\\src\\Firebase\\firebase.js",[],"C:\\Users\\kfang\\Desktop\\projects\\HackDuke2020\\hack_duke_2020\\src\\components\\Customers\\GoogleMap.js",["47","48","49"],"import React, { Component } from \"react\";\r\nimport {Map, InfoWindow, Marker, GoogleApiWrapper, Polygon} from 'google-maps-react';\r\nimport { geocodeByAddress, getLatLng, geocodeByPlaceId } from \"react-places-autocomplete\";\r\nimport './GoogleMap.css'\r\n\r\n\r\n\r\nexport class GoogleMap extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            latitude: 35.9940,\r\n            longitude: -78.8986,\r\n            place_ids: ['ChIJ74cKbp_nrIkR-d-zE9lgt88', 'ChIJoY7M-G3krIkRHcQ5pHpWHOs', 'ChIJ53W3QQfkrIkRb5gP_Ms5YeQ'],\r\n            markers: []\r\n\r\n\r\n        };\r\n        \r\n    }\r\n\r\n    onMarkerClick = () => {\r\n        console.log(\"Marker Clicked\")\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.markMap();\r\n    }\r\n\r\n    markMap = async () => {\r\n        let temp_markers = [];\r\n        \r\n        for (let i = 0; i < this.state.place_ids.length; i++) {\r\n            let place_id = this.state.place_ids[i];\r\n            let results = await geocodeByPlaceId(place_id) \r\n            \r\n            results.map(res => {\r\n                \r\n                temp_markers.push(<Marker name={\"Place\"} position={{lat: res.geometry.location.lat(), lng: res.geometry.location.lng()}}/>)\r\n            })\r\n            console.log(temp_markers)\r\n        }\r\n        \r\n        this.setState({markers: temp_markers})\r\n        \r\n    }\r\n    \r\n    render() {\r\n        const style = {\r\n            width: '100%',\r\n            height: '100%'\r\n        }\r\n\r\n        let coords = { lat: this.state.latitude, lng: this.state.longitude };\r\n\r\n        const triangleCoords = [\r\n            { lat: 25.0, lng: -80.0 },\r\n            { lat: 50.0, lng: -80.0 },\r\n            { lat: 50.0, lng: -100.0 },\r\n            { lat: 25.0, lng: -100.0 },\r\n          ];\r\n        \r\n        \r\n       \r\n        \r\n      return (\r\n        <Map\r\n          google={this.props.google}\r\n          style={style}\r\n          initialCenter={coords}\r\n          \r\n          zoom={15}\r\n          onClick={this.onMapClicked}>\r\n  \r\n          {/* <Marker onClick={this.onMarkerClick}\r\n                  name={'Current location'} /> */}\r\n            \r\n            {this.state.markers.map(m => {\r\n                return m;\r\n            })}\r\n          <InfoWindow onClose={this.onInfoWindowClose}>\r\n              <div>\r\n                <h1>{\"Info\"}</h1>\r\n              </div>\r\n          </InfoWindow>\r\n\r\n          <Polygon\r\n            paths={triangleCoords}\r\n            strokeColor=\"#0000FF\"\r\n            strokeOpacity={0.8}\r\n            strokeWeight={2}\r\n            fillColor=\"#0000FF\"\r\n            fillOpacity={0.35} />\r\n        </Map>\r\n      );\r\n    }\r\n  }\r\n\r\n\r\nexport default GoogleApiWrapper({\r\n    apiKey: \"AIzaSyB8KvFSaeRKoX-MOPVWzg1pbjYa0TSP0rE\"\r\n})(GoogleMap)\r\n\r\n",{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":19,"column":6,"nodeType":"56","endLine":19,"endColumn":8,"suggestions":"57"},{"ruleId":"58","severity":1,"message":"59","line":28,"column":38,"nodeType":"60","endLine":28,"endColumn":134},{"ruleId":"54","severity":1,"message":"55","line":14,"column":6,"nodeType":"56","endLine":14,"endColumn":8,"suggestions":"61"},{"ruleId":"62","severity":1,"message":"63","line":3,"column":10,"nodeType":"64","messageId":"65","endLine":3,"endColumn":26},{"ruleId":"62","severity":1,"message":"66","line":3,"column":28,"nodeType":"64","messageId":"65","endLine":3,"endColumn":37},{"ruleId":"67","severity":1,"message":"68","line":39,"column":29,"nodeType":"69","messageId":"70","endLine":39,"endColumn":31},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'businessRef'. Either include it or remove the dependency array.","ArrayExpression",["73"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["74"],"no-unused-vars","'geocodeByAddress' is defined but never used.","Identifier","unusedVar","'getLatLng' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation",{"desc":"75","fix":"76"},{"desc":"75","fix":"77"},"Update the dependencies array to be: [businessRef]",{"range":"78","text":"79"},{"range":"80","text":"79"},[639,641],"[businessRef]",[441,443]]